@model IEnumerable<BLL.Model.SalesDTO>

@{
    ViewBag.Title = "Sales";
}

<h2>Sales</h2>

<p>
    <button type="button" class="btn btn-primary" data-toggle="modal" data-bind="click :$root.newSales" data-target="#myModal">Add New  Sale</button><br /><br />
</p>
<table class="table">
    <thead>
    <tr>
        <th>
            StoreName
        </th>
        <th>
            ProductName
        </th>
        <th>
            Customer
        </th>
        <th>
            Amount
        </th>
        <th>
            Date Sold
        </th>
        <th>
        </th>
    </tr>
</thead>
    <tbody data-bind="foreach:  Sales">
        <tr>
            <td><span data-bind="text:  StoreName"></span></td>
            <td><span data-bind="text:  ProductName"></span></td>
            <td><span data-bind="text:  Customer"></span></td>
            <td><span data-bind="text:  Amount"></span></td>
            <td><span data-bind="text:  DateSold, dateFormat: 'DD-MM-YYYY'"></span></td>          
            <td><a href="#" data-bind="click: $root.EditModal.bind($root)">Edit</a> | @*<a href="#" data-bind="click: $root.Delete.bind($root)">Delete</a>*@</td>

        </tr>
    </tbody>
</table>
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog" data-bind="with : SelectedSale">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title" id="myModalLabel">Add Sale</h4>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <div class="editor-label">
                            Select Customer
                        </div>
                        <div class="editor-label">                        
                            <select class="form-control" data-bind="options: $parent.CustomerList,optionsText: 'Name',value:$parent.SelectedCustomer,optionsCaption: '...select...'" ></select>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="editor-label">
                            Select Store
                        </div>
                        <div class="editor-label">
                            <select class="form-control" data-bind="options: $parent.StoreList,optionsText: 'Name',value:$parent.SelectedStore,optionsCaption: '...select...'"></select>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="editor-label">
                            Select Product
                        </div>
                        <div class="editor-label">
                            <select class="form-control" data-bind="options: $parent.ProductList,optionsText: 'Name',value:$parent.SelectedProduct,optionsCaption: '...select...'"></select>
                        </div>
                        <div class="editor-label">
                            Select Date
                        </div>
                        <div class="editor-label">
                            <input type="date" id="txtDate" data-bind="value : Date" />
                        </div>
                       
                    </div>
                </form>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bind="click: $parent.Save" id="btnAdd">Add</button>
                <button type="button" class="btn btn-primary" id="btnUpdate" data-bind="click: $parent.Update" style="display:none;">Update</button>
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>

        </div>
    </div>
</div>
<script type="text/javascript">
    function ToHTMLDate(value) {
        var pattern = /Date\(([^)]+)\)/;
        var results = pattern.exec(value);
        if (results != null) {
            var dt = new Date(parseFloat(results[1]));
            var formattedDate = dt.getFullYear() + "-" + ("0" + (dt.getMonth() + 1)).slice(-2) + "-" + ("0" + (dt.getDate())).slice(-2);
            console.log(formattedDate);
            return formattedDate;
            // + 1
        }
        // (dt.getMonth() + 1) + "/" + dt.getDate() + "/" + dt.getFullYear();
    }

    function SaleModal(data)
    {
        var self = this;
        self.Id = ko.observable(data.Id);
        self.CustomerId = ko.observable(data.StoreId);
        self.StoreId = ko.observable(data.StoreId);
        self.ProductId = ko.observable(data.ProductId);
        self.Date = ko.observable(moment(data.Date).format('DD-MM-YYYY')).extend({required: {
            params: true,
                message: "Please select a date"
        }});
        //ko.observable(ToHTMLDate(data.Date));//.format("MM/DD/YYYY");//(ToHTMLDate(data.Date))
    }
    function TotalSaleModal(data) {
        var self = this;        
        self.Id = ko.observable(data.Id);
        self.StoreName = ko.observable(data.StoreName); 
        self.Customer = ko.observable(data.Customer);
        self.ProductName = ko.observable(data.ProductName);
        self.Amount = ko.observable(data.Amount);
        self.DateSold = ko.observable(moment(data.DateSold).format('DD-MM-YYYY'))// ko.observable(ToHTMLDate(data.DateSold));
        self.ProductSoldData = ko.observable(data.ProductSoldData);
    }
    function CustomerModal(data) {
       // debugger;
        var self = this;
        self.Id = data.Id;
        self.Name = data.Name;
        self.Address = data.Address;
    }
    function StoreModal(data) {
        var self = this;
        self.Id = data.Id;
        self.Name = data.Name;
        self.Address = data.Address;
    }
    function ProductModal(data) {
        var self = this;
        self.Id = data.Id;
        self.Name = data.Name;
        self.Price = data.Price;
    }

    var newSale =
        {
            Id: 0,
            CustomerId: 0,             
            StoreId: 0,
            ProductId: 0,
            Date: ko.observable(new Date())
        }
    var SaleViewModel = function () {
        var self = this;
        self.CustomerList = ko.observableArray([]);
        self.StoreList = ko.observableArray([]);
        self.ProductList = ko.observableArray([]);
        self.SelectedSale = ko.observable();
        self.Sales = ko.observableArray([]);
        self.SelectedCustomer = ko.observable();
        self.SelectedStore = ko.observable();
        self.SelectedProduct = ko.observable();
        self.newSales = function () {           // debugger;
            debugger;
           
            self.SelectedCustomer(null);            
            self.SelectedStore(null);           
            self.SelectedProduct(null);
            self.SelectedCustomer(new CustomerModal({ id: 0, Name: '', Address: '' }));
            self.SelectedProduct(new ProductModal({ id: 0, Name: '', Price: '' }));
            self.SelectedStore(new StoreModal({ id: 0, Name: '', Address: '' }));
            self.SelectedSale(new SaleModal(newSale));
            $('#btnUpdate').hide();
            $('#btnAdd').show();
            $('#myModalLabel').html("Add Sale");
        }
        LoadData();  
        LoadCustomerList();
        LoadStoreList();
        LoadProductList();
        function LoadData() {
            $('#myModal').modal('hide');            
            $.ajax({
                type: "GET",
                url: "/Sales/GetSalesData",
                success: function (result) {                    
                    result.forEach(function (element) {                       
                        self.Sales.push(new TotalSaleModal(element));
                    });
                    //self.Sales(result);
                },
                error: function error() {
                    alert(error.status + "<--and--> " + error.statusText);
                }
            });
        };
        
        function LoadCustomerList() {

            $.ajax({
                type: "GET",
                url: "/Sales/GetAllCustomers",
                success: function (result) {
                    //debugger;
                    result.forEach(function (element) {
                        self.CustomerList.push(new CustomerModal(element));
                    });
                },
                error: function error() {
                    alert(error.status + "<--and--> " + error.statusText);
                }
            });
        };

        function LoadStoreList() {
            $.ajax({
                type: "GET",
                url: "/Sales/GetAllStores",
                success: function (result) {
                    //debugger;
                    result.forEach(function (element) {
                        self.StoreList.push(new StoreModal(element));
                    });
                },
                error: function error() {
                    alert(error.status + "<--and--> " + error.statusText);
                }
            });
        };

        function LoadProductList() {
            $.ajax({
                type: "GET",
                url: "/Sales/GetAllProducts",
                success: function (result) {
                    //debugger;
                    result.forEach(function (element) {
                        self.ProductList.push(new ProductModal(element));
                    });
                },
                error: function error() {
                    alert(error.status + "<--and--> " + error.statusText);
                }
            });
        };

        self.Save = function (data)  {
            debugger;
            var SaleDTO = {};
            SaleDTO.CustomerId = self.SelectedCustomer().Id;
            SaleDTO.StoreId = self.SelectedStore().Id;
            SaleDTO.ProductId = self.SelectedProduct().Id;
            SaleDTO.Date = data.Date;
            console.log(ko.toJSON(self.SaleDTO));
                $.ajax({
                    url: "/Sales/Create", // Controller/View
                    type: "POST",
                    contentType: "application/json;charset=UTF-8",
                    dataType: "json",
                    data: ko.toJSON(SaleDTO),//ko.toJSON(self.SelectedSale),
                    
                    success: function (result) {                       
                        if (result.Valid) {                            
                            LoadData();
                        }
                    }
                }).fail(
                    function (xhr, textStatus, err) {
                        alert(err);
                    }
                    )

                //Ends Here
            };
        self.Update = function (data) {
            debugger;
            var SaleDTO = {};
            SaleDTO.Id = data.Id;
            SaleDTO.CustomerId = self.SelectedCustomer().Id;
            SaleDTO.StoreId = self.SelectedStore().Id;
            SaleDTO.ProductId = self.SelectedProduct().Id;
            SaleDTO.Date =data.Date;
            console.log(ko.toJSON(data));
            //console.log(ko.toJSON(self.SelectedSale));
            $.ajax({
                url: "/Sales/Edit", // Controller/View
                type: "POST",
                contentType: "application/json;charset=UTF-8",
                dataType: "json",
                data: ko.toJSON(SaleDTO),//ko.toJSON(self.SelectedSale),
                success: function (result) {

                    if (result.Valid) {
                        LoadData();
                    }
                }
            }).fail(
                function (xhr, textStatus, err) {
                    alert(err);
                }
                )

            //Ends Here
        };

        self.EditModal = function (data) {
            debugger;      
            //console.log(data);
            //console.log(data.ProductSoldData().Date);
            self.SelectedSale(data.ProductSoldData());
            var selectCus = ko.utils.arrayFirst(self.CustomerList(), function (item) { return item.Id == data.ProductSoldData().CustomerId });
            self.SelectedCustomer(selectCus);
            var selectProduct = ko.utils.arrayFirst(self.ProductList(), function (item) { return item.Id == data.ProductSoldData().ProductId });
            self.SelectedProduct(selectProduct);
            self.SelectedStore ( ko.utils.arrayFirst(self.StoreList(), function(item){return item.Id == data.ProductSoldData().StoreId }));
            $('#myModal').modal('show');
            $('#btnUpdate').show();
            $('#btnAdd').hide();
            $('#myModalLabel').html("Edit Product");
            
            
        };
        //self.Delete = function (data) {
        //    var ans = confirm("Are you sure you want delete this sale  ?");
        //    if (!ans) return;
        //    $.ajax({
        //        url: "/Sales/Delete/" + data.Id,
        //        type: "POST",
        //        contentType: "application/json;charset=UTF-8",
        //        dataType: "json",
        //        success: function (result) {
        //            LoadData();
        //        }
        //    }).fail(
        //        function (xhr, textStatus, err) {
        //            alert(err);
        //        }
        //        )
        //    })
       // }
    }
   
    ko.applyBindings(new SaleViewModel())
    ko.bindingHandlers.date = {
        update: function (element, valueAccessor, allBindingsAccessor, viewModel) {
            var value = valueAccessor();
            var date = moment(value);
            var strDate = date.format('DD-MM-YYYY');
            if ($(element).is(':input'))
                $(element).val(strDate);
            else
                $(element).text(strDate);
        }
    };
</script>
